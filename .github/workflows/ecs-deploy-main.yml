name: Deploy to test-mexit-backend-ecs-cluster on push to branch main

on:
  push:
    branches:
      - main
      - api-gateway-invoker-experiments

jobs:
  build-and-deploy-ecs:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ github.token }}
      YARN_TOKEN: ${{ secrets.YARN_TOKEN }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: "us-east-1"
      DOCKER_BUILDKIT: 1
      MEXIT_BACKEND_REDIS_HOST: ${{ secrets.TEST_MEXIT_BACKEND_REDIS_HOST }}
      MEXIT_BACKEND_REDIS_PORT: ${{ secrets.TEST_MEXIT_BACKEND_REDIS_PORT }}
      REST_API_KEY: ${{ secrets.REST_API_GATEWAY_KEY }}

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          aws-region: us-east-1

      - name: Install Gettext Tools for envsubst
        run: sudo apt update && sudo apt install gettext-base

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          MEXIT_BACKEND_ECR_REPOSITORY: test-mexit-backend
          NGINX_ECR_REPOSITORY: nginx-mexit-backend
          IMAGE_TAG: ${{ github.sha }}

        run: |
          envsubst < .npmrc > .npmrc.values
          docker build --secret id=npmrc,src=.npmrc.values -t $ECR_REGISTRY/$MEXIT_BACKEND_ECR_REPOSITORY:$IMAGE_TAG .
          rm .npmrc.values
          docker tag $ECR_REGISTRY/$MEXIT_BACKEND_ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$MEXIT_BACKEND_ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$MEXIT_BACKEND_ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$MEXIT_BACKEND_ECR_REPOSITORY:latest

          docker build -t $ECR_REGISTRY/$NGINX_ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile.nginx .
          docker tag $ECR_REGISTRY/$NGINX_ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$NGINX_ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$NGINX_ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$NGINX_ECR_REPOSITORY:latest

          echo "::set-output name=backend_image::$ECR_REGISTRY/$MEXIT_BACKEND_ECR_REPOSITORY:$IMAGE_TAG"
          echo "::set-output name=nginx_image::$ECR_REGISTRY/$NGINX_ECR_REPOSITORY:$IMAGE_TAG"

      - name: Add secrets to Task Definition
        run: |
          sed -i "s/<mexit_backend_google_client_id>/$MEXIT_BACKEND_GOOGLE_CLIENT_ID/g" deploy/test-taskdef.json
          sed -i "s/<mexit_backend_google_client_secret>/$MEXIT_BACKEND_GOOGLE_CLIENT_SECRET/g" deploy/test-taskdef.json
          sed -i "s/<MEX_DEFAULT_USER_REFRESH_TOKEN>/$MEX_DEFAULT_USER_REFRESH_TOKEN/g" deploy/test-taskdef.json
          sed -i "s/<mexit_backend_redis_host>/$MEXIT_BACKEND_REDIS_HOST/g" deploy/test-taskdef.json
          sed -i "s/<mexit_backend_redis_port>/$MEXIT_BACKEND_REDIS_PORT/g" deploy/test-taskdef.json
          sed -i "s/<rest_api_key>/$REST_API_KEYT/g" deploy/test-taskdef.json

        env:
          MEXIT_BACKEND_GOOGLE_CLIENT_ID: ${{ secrets.MEXIT_BACKEND_GOOGLE_CLIENT_ID }}
          MEXIT_BACKEND_GOOGLE_CLIENT_SECRET: ${{ secrets.MEXIT_BACKEND_GOOGLE_CLIENT_SECRET }}
          MEX_DEFAULT_USER_REFRESH_TOKEN: ${{ secrets.TEST_MEX_DEFAULT_USER_REFRESH_TOKEN }}
          MEX_DEFAULT_USER_ID: ${{ secrets.TEST_MEX_DEFAULT_USER_ID }}
          MEXIT_BACKEND_REDIS_PORT: ${{ secrets.TEST_MEXIT_BACKEND_TEST_REDIS_PORT }}
          REST_API_KEY: ${{ secrets.REST_API_GATEWAY_KEY }}

      - name: Render Amazon ECS task definition for Mexit Backend Container
        id: render-task-definition-app
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: deploy/test-taskdef.json
          container-name: app
          image: ${{ steps.build-image.outputs.backend_image }}

      - name: Render Amazon ECS task definition for Nginx Container
        id: render-task-definition-nginx
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ steps.render-task-definition-app.outputs.task-definition }}
          container-name: nginx-container
          image: ${{ steps.build-image.outputs.nginx_image }}

      - name: Deploy Task Definition to ECS Cluster
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1.4.10
        with:
          task-definition: ${{ steps.render-task-definition-nginx.outputs.task-definition }}
          service: test-mexit-backend-svc
          cluster: test-mexit-backend-ecs-cluster
          wait-for-service-stability: false
